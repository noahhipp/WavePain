% subtract online signal from corresponding wm conditions

behav = 1;
% CONSTANTS
BASE_STR = '_bl';

EDA_NAME_IN     = 'all_eda_behav_downsampled10_collapsed.csv';
[~,~,~,EDA_DIR] = wave_ghost('behav');
EDA_FILE_IN     = fullfile(EDA_DIR, EDA_NAME_IN);
[~,NAME, SUFFIX]= fileparts(EDA_FILE_IN);
EDA_FILE_OUT    = EDA_FILE_IN;

CHECK_NAME = [NAME, '_has_baseline_corrected_cols_scl.bin'];
CHECK_FILE = fullfile(EDA_DIR, CHECK_NAME);


if exist(CHECK_FILE,'file')
    fprintf('to run this function again\ndelete %s\n',CHECK_FILE);
    return
end

% Collect data
DATA = readtable(EDA_FILE_IN);

% Prepare new cols
cols_to_base        = {'s_zt_dtt_scl', 's_native_scl','s_zt_scl'};
based_cols          = strcat(cols_to_base, BASE_STR);
n_cols_to_base      = numel(cols_to_base);
data{:,based_cols}  = nan(height(data),n_cols_to_base);


for i = unique(data.ID)'
    % Pick subject
    sub = data(data.ID == i,:);
    
    if behav
        if i < 15 % then we have no online scl to use for basing
            continue
        end
    end
    
    for j = 1:n_cols_to_base
        col_to_base = cols_to_base{j};
        based_col   = based_cols{j};
    % Pick baseline
        m = sub{sub.condition == 5, col_to_base};
        w = sub{sub.condition == 6, col_to_base};
    
    % Get indices for correct cols
        ms = ismember(sub.condition, [1 2 5]);
        ws = ~ms;
    
        sub{ms, based_col} = sub{ms, cols_to_base} - repmat(m,[3,1]);
        sub{ws, based_col} = sub{ws, cols_to_base} - repmat(w,[3,1]);
    
    % Put subject back
    data(data.ID == i,:)=sub;
end

writetable(data,eda_file_out);

fh=fopen(check_file, 'w');
fwrite(fh, 1, 'logical');
fclose(fh);